{
id: "forest_interior_window_dormer",
zorder: "@include data/zorder.cfg:interior_back_wall_decor",
prototype: ["transient_object"],

editor_info: {
	category: "edifice, forest-interior",
},

parallax_scale_x: 1000,
parallax_scale_y: 1000,

properties: {
	lightstream: { type: "obj forest_interior_window_dormer.lightstream", init: "object('forest_interior_window_dormer.lightstream', mid_x, mid_y + 90, facing)" },
},


on_create: "[
	add_object(me.lightstream),
	spawn('forest_interior_window_dormer.window_back', mid_x * (1.000/1.050) * 1.025, (mid_y + 30), 1),
	spawn('effects_attache_glow_source', mid_x, mid_y, {
		time_to_die: 0,
		parent: me,
		custom_relative_pos_default: {mid_x: 0,	mid_y: 30},
		flicker_type: enum window_light,
		graphics: enum soft_glow_green,
		external_process_callback: me.lightstream.set_alpha_value,
		scale_factor: 0.75,
		parallax_scale_x: 1.002,
	}),
]",




animation: {
	id: "normal",
	image: "props/forest-interior-woodwork2.png",
	rect: [288,320,479,447],
	//palettes: "@include data/palettes.cfg:dungeon_palettes",
},


object_type: [{
	id: "lightstream",
	zorder: "@include data/zorder.cfg:near_player_foreground_effects",
	
	properties: {
		set_alpha_value: "def(decimal input) -> commands set(alpha, lib.math.round(input))",
	},

	on_process: " ([set(custom_draw,
			[0.0,1.0,2.0,3.0,
			[0,0],[0,0],[offset_right,0],[offset_left,0]])]
		
			where offset_left = distance*0.10
			where offset_right =  distance*0.10
		
			) where distance = -(screen_midpoint - me.midpoint_x) where screen_midpoint = level.camera_position[0] + level.camera_position[2]/2",


	animation: {
		blend:["src_alpha","one"],
		id: "normal",
		image: "props/forest-interior-woodwork2.png",
		rect: [416,192,511,319],
	},

},{
	id: "window_back",

	parallax_scale_x: 1050,
	parallax_scale_y: 1000,
	zorder: "@include data/zorder.cfg:background_parallax_walls",


	animation: {
		id: "normal",
		image: "props/forest-interior-woodwork4.png",
		rect: [96,288,159,351],
		frames: 1,
		duration: 100000,
	},
}]
}
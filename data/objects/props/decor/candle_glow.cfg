{
ignore_collide: true,
prototype: ["transient_object"],
id: "candle_glow",
is_strict: true,
zorder: "@include data/zorder.cfg:near_player_foreground_effects",
properties: {
	glow_size: "65",
	base_alpha: "60",
	distance_to_player: "lib.math.length(me, level.player)",

#-------------------------- vars --------------------------#
	glow_speed: { type: "decimal", default: 1.0, persistent: false },
	cycle_offset: { type: "decimal", init: "1d6000", persistent: false },
	gutter_amount: { type: "decimal", default: 0, persistent: false },
	init_mid_x: { type: "decimal", init: "mid_x", persistent: false },
	init_mid_y: { type: "decimal", init: "mid_y", persistent: false },

	is_burning: { type: "bool", default: true, persistent: false },
	the_candle: { type: "custom_obj", dynamic_initialization: true, persistent: false },


	light_circular: {
		type: "obj light_source_attache",
		init: "object('light_source_attache', mid_x, mid_y, {
			_sprite_type: enum eased_halo,
			time_to_die: 0,
			parent: me,
			custom_relative_pos_default: {mid_x: 0,	mid_y: 0},
			scale: 0.55,
			variable_name: 'light_circular',
		})",
		persistent: false,
	},
	
	
#-------------------------- constructor/destructor --------------------------#
	transient_obj_constructor: "[
		set(alpha,base_alpha),
		set(green,69),
		set(blue,31),
		add_particles('flamey'),
		fire_event(self,'set_flicker'),
		add_object(light_circular),
	]",
	
},


on_process: "if(HIGH_END_SYSTEM, fire_event(self,'set_flicker'))",
on_set_flicker: "[
				if(light_magnitude < 0, set(is_burning, false)),
				if(is_burning, [
					set(light_circular.scale, 0.55 * light_magnitude * 0.01),
					set(light_circular.brightness, min(lib.math.round(255 * light_magnitude * 0.66),255)), 


					set(cycle_offset, cycle_offset + glow_speed),
					if(gutter_amount >= 20,
						set(gutter_amount, gutter_amount - 1d70 - 20)
					),
					if(
						distance_to_player < 100 and
						gutter_amount < (((100 - distance_to_player)*(abs(level.player.velocity_x) + abs(level.player.velocity_y)))/100),

						set(gutter_amount, (((100 - distance_to_player)*(abs(level.player.velocity_x) + abs(level.player.velocity_y)))/100))
					),
					if(cycle%8=3, [
						set(glow_speed, 1d15+((gutter_amount+6000)/300)),
						set(cycle_offset, 1d6000)
					]),
					if(cycle%5=1, [
						set(mid_x, init_mid_x + (1d6)-1),
						set(mid_y, init_mid_y + (1d6)-1)
					]),
				],[
					set(lights, []),
					fire_event(the_candle, 'out'),
					die()
				])
			]
				where light_magnitude = wave((cycle_offset))/abs(150-(gutter_amount/20))+glow_size-((gutter_amount*(150/90))/20)
			",
			
timer_frequency: 5,
on_timer: "[set(alpha, base_alpha + (wave(cycle*(10 +1d2))*20)/2000), set(particle_systems['flamey'].spawn_rate, (wave(cycle)+1000)/100+10)]",

animation: {
	id: "normal",
	image: "props/glow2.png",
	rect: [0,0,63,63],
	blend:["src_alpha","one"],
	frames: 1,
	scale: 1,
	duration: -1,
},
particle_system: {
	id: "flamey",
	type: "simple",
	spawn_rate: 20,
	time_to_live: 40,
	min_x: 28,
	max_x: 28,
	min_y: 25,
	max_y: 25,
	velocity_y: -750,
	velocity_x: -750,
	velocity_x_random: 1500,
	velocity_y_random: 1500,
	accel_y: 1,
	animation: {
		id: "sparkle",
		image: "effects/explosion.png",
		x: 154,
		y: 193,
		w: 4,
		h: 4,
		pad: 3,
		frames: 5,
		scale: 2,
		duration: 10,
		accel_y: -1,
	},
},
}

{
	id: "scrollable_area",
	is_strict: true,
	hidden_in_game: false,
	zorder: 500,
	always_active: true,
	use_absolute_screen_coordinates: true,

	types: {
		ChildObj: "{ obj: custom_obj, rel_pos: {x: int, y: int} }",
	},

	properties: {
		viewport_width: { type: "int" },
		viewport_height: { type: "int" },
		
		interior_dimensions: { type: "{ w: int, h: int }", default: {w:100, h:100} },


		scroll_offset: { type: "{ x: int, y: int }", default: {x:0, y:0} },
		add_scroll_offset: "def({x: int, y: int} delta) -> commands
			set_scroll_offset({
				x: lib.math.round( lib.math.constrain(0, scroll_offset.x + delta.x, interior_dimensions.w)),
				y: lib.math.round( lib.math.constrain(0, scroll_offset.y + delta.y, interior_dimensions.h)),
			})
		",



		children: { type: "[ChildObj]", default: [] },

		_scrollbar: { type: "obj scroll_bar_vertical", init: "object('scroll_bar_vertical',x,y,{_scroll_area: me})" },
		
		
		set_scroll_offset: "def({x: int, y: int} new_offset) -> commands [
			map(children, [
				set(value.obj.relative_x, value.rel_pos.x + new_offset.x),
				set(value.obj.relative_y, (value.rel_pos.y) + (new_offset.y)),
			]),
			set(scroll_offset, {
				x: new_offset.x,
				y: new_offset.y,
			}),

			map(children,
				if(	value.obj.x < me.x or
					value.obj.x + value.obj.img_w >= x + viewport_width or
					value.obj.y < me.y or
					value.obj.y + value.obj.img_h >= y + viewport_height,
					[
						//set(value.obj.clip_area_absolute, true),
						set(value.obj.clip_area, dump([clip_x1, clip_y1, clip_x2, clip_y2])),
					]
						where clip_x1 = if(new_x > me.x,
											0,
											me.x - new_x
										)
						where clip_x2 = if(new_x2 < (me.x + viewport_width),
											value.obj.img_w,
											value.obj.img_h - (new_x2 - (me.x + viewport_width))
										)
						where clip_y1 = if(new_y > me.y,
											0,
											me.y - new_y
										)
						where clip_y2 = if(new_y2 < (me.y + viewport_height),
											value.obj.img_h,
											value.obj.img_h - (new_y2 - (me.y + viewport_height))
										)
					
						where new_x = me.mid_x + (value.rel_pos.x - value.obj.img_w/2) + new_offset.x
						where new_x2 = (value.rel_pos.x + value.obj.img_w/2) + new_offset.x
						
						where new_y = me.mid_y + (value.rel_pos.y - value.obj.img_h/2) + new_offset.y
						where new_y2 = (value.rel_pos.y + value.obj.img_h/2) + new_offset.y
					,
					[
						set(value.obj.clip_area, null),
					]
				)
			),
			debug(' '),
		]",
	},

	on_create: "[
		map(children, add_object(value.obj)),
		map(children, set(value.obj.parent, me)),
		;
		set_scroll_offset({x:0, y:0}),
	]",

	on_process: "[
//		set_scroll_offset({x:0 - cycle%viewport_width, y:0 - cycle%viewport_height}),
	]",

	on_being_removed: "map(children, remove_object(value.obj))",


}

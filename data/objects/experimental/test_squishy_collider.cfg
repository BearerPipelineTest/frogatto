{
id: "test_squishy_collider",
	is_strict: true,
	prototype: ["cosmetic_effects"],
	editor_info: {
		category: "experimental",
	},
	solid_area: [0,0,31,31],

	//has_feet: false,
	properties: {
		_last_squished: { type:"int", default: 0 },
		springiness: "175",
		
		set_squish: "commands ::
			set(custom_draw, [0.0,1.0,2.0,3.0,
				[
					mag * ( 1.0 - squish_progress) * (-0.4),
					mag * ( 1.0 - squish_progress) * (1.5)
				],
				[
					mag * (-1.0 + squish_progress) * (-0.4),
					mag * ( 1.0 - squish_progress) * (1.5)
				],
				[
					0.0,
					0.0
				],
				[
					0.0,
					0.0
				]
			]) where mag = 30.0",

		squish_progress: { type: "decimal", init: "1.0" },		

		trigger_squish: "commands :: 
						if(level.cycle - _last_squished > 45,
							[
								set(_last_squished, level.cycle),
								animate(me,
									{
										squish_progress: 0.0
									},
									{
										duration: 15,
										easing: lib.math.ease_in_sine,
										on_complete: reverse_squish_animation,
									}
								),
							]
						)",

		reverse_squish_animation: "animate(me,
			{
				squish_progress: 1.0
			},
			{
				duration: 30,
				easing: lib.math.ease_out_elastic,
			}
		)",

	},
	on_create: "",

	on_bounced_on: "[trigger_squish]",

	on_collide_head: "[set(_last_squished, level.cycle), debug('collide_head')]",
	on_collide_side: "[set(_last_squished, level.cycle), debug('collide_side')]",
	on_collide_feet: "[set(_last_squished, level.cycle), debug('collide_feet')]",
	
	
	on_process: "set_squish",

	animation: {
		id: "normal",
		image: "statusbar.png",
		rect: [139,8,170,39],
	},
}
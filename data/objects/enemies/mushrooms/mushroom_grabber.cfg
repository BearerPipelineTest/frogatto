{
id: "mushroom_grabber",
prototype: ["mushroom_flier"],

zorder: "@include data/zorder.cfg:near_player_foreground_effects",
properties: {
#-------------------------- constructor/destructor logic --------------------------#
	ant_flying_variant_constructor: "commands :: [
		if(_behavior = null,set(_behavior,'hover')),
		set(activation_border, 150),
		set(activation_area, [
			_x_bound - 200,
			_desired_height - 200,
			_x2_bound - _x_bound + 200,
			_dive_height - _desired_height + 400
		]),
	]",

#-------------------------- metadata --------------------------#
	title: "~Mushroom Grabber~",
	description: "~Milgramâ€™s Kitties used to use these to help construct his castle. No one was ever able to prove they were the cause of the disappearances.~",
	taste: "~Hair, which is definitively worrying.~",

#-------------------------- prototype overrides --------------------------#
	physical_size: 32,


#-------------------------- hittable overrides --------------------------#
	handle_special_damage_response: "def(DamageType damage_type, int final_damage_amount, bool will_die)  -> commands
				execute(me, if(final_damage_amount > 0, [set(_time_last_spooked, cycle), set(_behavior, 'climb')]))",


#-------------------------- core behavior --------------------------#
	spook_duration: 200,
	is_spooked: "(cycle - _time_last_spooked < spook_duration)",

	
	dive_speed_x: "if(higher_difficulty, 30+1d30, 30)",
	dive_speed_y: "if(higher_difficulty, 30, 30)",
	climb_speed_x: "if(higher_difficulty, 15, 15)",
	climb_speed_y: "if(higher_difficulty, 12, 12)",
	
	should_dive: "if((not is_spooked) and can_seize_player,  if(
						level.player.y > y + 50 and level.player.y < _dive_height and
						level.player.midpoint_x > _x_bound and
						level.player.midpoint_x < _x2_bound, 1, 0))",


	
	central_process: "	 [if(is_carrying_player, carry_player),switch(_behavior,
							'', process_climb,
							'hover', process_hover,
							'dive', process_dive,
							'climb', process_climb,
							'regular', [proto_event('ant_flying', 'process_fly'), if(should_dive, begin_dive)]),
							set(rotate, sin(cycle*7) * 4.0),
							if(animation in ['fly1','fly2','fly3'], [set(animation, 'fly'+animation_suffix), set(time_in_animation, time_in_animation)])]",


	carry_player: "[set(level.player.mid_x, me.mid_x),set(level.player.y, me.y+10),set(level.player.velocity_y, me.velocity_y)]",
	is_carrying_player: "((cycle - _last_seized) < seize_duration)",
	can_seize_player: "(cycle - _last_seized > seize_duration*2)",
	seize_player: "[set(_last_seized, cycle),set(_behavior,'climb')]",
	seize_duration:  150,


#-------------------------- tmp vars --------------------------#
	_last_seized: { type: "int", default: -200, persistent: false },
	_time_last_spooked: { type: "int", default: -200, persistent: false },
},

on_collide_object_seize: "if(arg.collide_with = level.player, if((not is_carrying_player) and can_seize_player, [seize_player, sound('Mushroom-grab.wav')]))", 



animation: [
	{
		"@base": true,
		image: "enemies/mushroom-grabber.png",
		body_area: "all",
		accel_y: 0,
		feet_x: 22,
		feet_y: 22,
		pad: 0,
		seize_area: [4,18,24,28],
	},
	{
		id: "fly1",
		rect: [0,0,44,44],
		frames: 8,
		frames_per_row: 4,
		duration: 5,
		accel_x: 0,
		events: "8:wingflap",
		seize_area: [4,18,24,28],
	},
	{
		id: "fly2",
		rect: [0,90,44,134],
		frames: 8,
		frames_per_row: 4,
		duration: 5,
		accel_x: 0,
		events: "8:wingflap",
		seize_area: [4,18,24,28],
	},
	{
		id: "fly3",
		rect: [0,180,44,224],
		frames: 8,
		frames_per_row: 4,
		duration: 5,
		accel_x: 0,
		events: "8:wingflap",
		seize_area: [4,18,24,28],
	},
	{
		id: "spring",
		rect: [0,90,44,134],
		frames: 1,
		duration: 3,
	},
	{
		id: "turn",
		rect: [0,90,44,134],
		frames: 1,
		duration: 3,
		attack_area: [4,18,24,28],
	},
	{
		id: "hurt",
		rect: [0,90,44,134],
		frames: 1,
		duration: 18,
	},
],
}

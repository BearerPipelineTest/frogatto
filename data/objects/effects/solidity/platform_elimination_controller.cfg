{
id: "platform_elimination_controller",
ignore_collide: true,
hidden_in_game: true,
is_strict: true,
zorder: "@include data/zorder.cfg:in_front_of_everything",

/*
	This uses the same semantics as the secret passage controller object.

	Instead of eliminating 'solidity', it eliminates the standable-platforms created by tiles.   It's particularly meant for use in the forest segments of the game, where we nestle house graphics on top of tree-and-branch tiles;  the tree and branch tiles are relatively inflexible in terms of having to be placed in certain arrangements to get certain graphics, so we'd like to be able to eliminate those on an ad-hoc basis if there's a house graphic in front of them.
*/


editor_info: {
	category: "controllers",
},

properties: {
	set_actA: "commands ::
					set(activation_area, [
						min(_x_bound,_x2_bound) -200,
						min(_y_bound,_y2_bound) -200,
						abs(_x_bound-_x2_bound) +200,
						abs(_y_bound-_y2_bound) +200
					])",


#-------------------------- editor settings --------------------------#
	_x_bound: { type: "int", editor_info: { type: "x", value: "x-100" } },
	_x2_bound: { type: "int", editor_info: { type: "x", value: "x+150" } },
	_y_bound: { type: "int", editor_info: { type: "y", value: "y-100" } },
	_y2_bound: { type: "int", editor_info: { type: "y", value: "y+150" } },
	_solid: { type: "bool", editor_info: { type: "boolean", value: "false" }, default: false },
},


on_start_level: "set_actA",

on_load: "	[
				fire_event('level_tiles_refreshed'),
				set_actA
			]",

on_level_tiles_refreshed: "if(should_open, set_standable(_x_bound, _y_bound, _x2_bound, _y2_bound, _solid))
	where should_open = true
	",
	
	
on_end_anim: "animation('normal')",

animation: {
	id: "normal",
	image: "effects/particles.png",
	x: 179,
	y: 73,
	w: 28,
	h: 28,
	frames: 1,
	duration: 1000,
},
}

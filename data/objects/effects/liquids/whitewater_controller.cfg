{
id: "whitewater_controller",
prototype: ["liquid"],
zorder: "@include data/zorder.cfg:in_front_of_everything",

properties: {
	liquid_damage: "kill_anything",
	
	add_water_effect: "add_water(_x_bound, _y_bound, _x2_bound, _y2_bound, [140,00,0,70])",
	
	
#-------------------------- fx objects --------------------------#
	volume_bubbles: { 
		type: "obj particle_attache", 
		init: "object('particle_attache', x,y, {
			_particle_type:'bubbles_2', //Silence check for this existing. `particles`, which this sets, is overwritten later.
			parent: me,
			time_to_die: 0,
			x:x, y:y,
			zorder: lib.zorder.get('liquid_particle_effects'),
		})"
	},

#-------------------------- constructors --------------------------#
	liquid_obj_constructor: "commands :: [
		add_particle_effect ;
		setup_particles ;
		[
			setup_shader,
//			add_object(underlay_obj),
//			add_object(top_obj),
//			add_object(lights_obj),
//			add_object(lights_transverse_obj),
		]

	]",


	add_particle_effect: "[
		add_object(volume_bubbles),
		add_particles('fizz'),
		add_particles('splash'),
		add_particles('splash_droplets'),
	]",


	setup_particles: "[
		set(volume_bubbles.clip_area, [_x_bound-mid_x, _y_bound-mid_y, _x2_bound - _x_bound, _y2_bound - _y_bound, ]),
		set(volume_bubbles.particles, (
			raw_particle_system_info + {
				position: [
					(_x_bound + _x2_bound)/2 - mid_x, //Horizontal offset of particle system as wide as the water, to handle when the emitter object isn't square within the bounds of the water.
					_y2_bound - mid_y, //Position the center point (of the box emitter) at the bottom of the body of water.
					0
				],
				fast_forward: (map <- raw_particle_system_info.fast_forward) + {
					time: bubble_average_lifetime, //Pump the water full of bubbles when we first encounter it.
				},
				emitter: (map <- raw_particle_system_info.emitter) + {
					time_to_live: bubble_average_lifetime, //Make the bubbles live until the top of the water.
					box_width: _x2_bound - _x_bound, //Make the bubbles as wide as the water. (To position the bubbles, see `position` above.)
					emission_rate: (map <- (map <- raw_particle_system_info.emitter).emission_rate) + {
						max: (_x2_bound - _x_bound) / 20, //Particle density. (Particles per pixel of water surface, divided by 2 on average because random floor is 0.)
					}
				},
			} where
				raw_particle_system_info = 
					(ParticleSystemInfo <- get_document('data/particles/bubbles_2.cfg')).info,
				bubble_average_lifetime = 
					(_y2_bound - _y_bound) / average_vertical_bubble_speed / 60/*fps*/
					where average_vertical_bubble_speed = 0.7 //as experimentally verified
		)),


		set(particle_systems['fizz'].min_x, _x_bound - x),
		set(particle_systems['fizz'].max_x, _x2_bound - x),
		set(particle_systems['fizz'].min_y, (_y_bound - 15) - y),
		set(particle_systems['fizz'].max_y, (_y_bound + 60) - y),
		set(particle_systems['fizz'].spawn_rate, 4*(_x2_bound - _x_bound)),
		set(particle_systems['splash'].min_x, _x_bound - x),
		set(particle_systems['splash'].max_x, _x2_bound - 54 - x),
		set(particle_systems['splash'].min_y, (_y_bound + 6) - y),
		set(particle_systems['splash'].max_y, (_y_bound + 6) - y),
		set(particle_systems['splash'].spawn_rate, 1*(_x2_bound - _x_bound)),
		set(particle_systems['splash_droplets'].pos_x, _x_bound - x),
		set(particle_systems['splash_droplets'].pos_x_rand, _x2_bound - x),
		set(particle_systems['splash_droplets'].pos_y, (_y_bound) - y),
		set(particle_systems['splash_droplets'].pos_y_rand, (_y_bound) - y),
		set(particle_systems['splash_droplets'].generation_rate, 10*(_x2_bound - _x_bound))
	]",

},
	

	   
animation: {
	id: "normal",
	image: "effects/particles.png",
	x: 147,
	y: 102,
	w: 28,
	h: 28,
	frames: 1,
	duration: 1000,
},

particle_system: [
	{
		id: "fizz",
		type: "simple",
		spawn_rate: 600,
		time_to_live: 48,
		min_x: -60,
		max_x: 260,
		min_y: -5,
		max_y: 15,
		velocity_y: -200,
		velocity_x: 260,
		velocity_x_random: 200,
		velocity_y_random: 400,

		#color=255,255,255,255
		animation: {
			id: "normal",
			image: "effects/water-splash.png",
			x: 120, y: 1, w: 37, h: 37,
			pad: 3,
			frames: 12,
			frames_per_row: 3,
			duration: 4,
		},
	},
	{
		id: "splash",
		type: "simple",
		spawn_rate: 600,
		time_to_live: 40,
		min_x: -60,
		max_x: 260,
		min_y: 0,
		max_y: 0,
		velocity_y: 0,
		velocity_x: 260,

		#color=255,255,255,255
		animation: {
			id: "normal",
			image: "effects/water-splash.png",
			x: 1, y: 1, w: 54, h: 38,
			pad: 3,
			frames: 10,
			frames_per_row: 2,
			duration: 4,
		},
	},
	{
		id: "splash_droplets",
		type: "point",
		generation_rate_millis: 0,
		time_to_live: 30,
		red: 255,
		green: 255,
		blue: 255,
		alpha: 255,
		dot_size: 1,
		pos_x: -10,
		pos_x_rand: 20,
		pos_y: -60,
		velocity_x: -2000,
		velocity_x_rand: 4000,
		velocity_y: -4500,
		velocity_y_rand: 2000,
		accel_y: 200000,
	},
],
}
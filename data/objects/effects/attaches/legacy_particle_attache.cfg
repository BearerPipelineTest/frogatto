{
id: "legacy_particle_attache",
prototype: ["effects_attache"],
zorder: "@include data/zorder.cfg:near_player_foreground_effects",
hidden_in_game: false,


types: {
	LegacyParticleSystemInfo: "{
		particle_system: [map],
	}",

	SpawnRateData: "[{ name: string, rate: int }]",
},

properties: {
#-------------------------- effects_attache overrides --------------------------#
	do_setup: "[
					initialize_position,
					map(particle_names, add_particles(value)),
				]",

	turn_on: "commands :: map(natural_spawn_rates, set(particle_systems[ value.name ].spawn_rate, value.rate))",

	turn_off: "	map(particle_names, set(particle_systems[value].spawn_rate, 0))",


#-------------------------- storage --------------------------#
	particle_names: { type: "[string]", default: [] },
	natural_spawn_rates: { type: "SpawnRateData", default: [] },


#-------------------------- vars --------------------------#
	_particle_type: {
		type: "string",
		set: "[
			set(_data, value),
			set(particle_names, ([string] <- map(info.particle_system, value.id))),
			set(natural_spawn_rates,(SpawnRateData <- map(info.particle_system, {name: value.id, rate: value.spawn_rate}))),
		] where info = LegacyParticleSystemInfo <- get_document(sprintf('data/particles_legacy/%s.cfg', value))",
	},





},



#-------------------------- particle definitions --------------------------#
	/*
		Unfortunately, here, we've got a small dumpster fire - by the time I got this code mostly working, I discovered these old legacy particles have to exist in the object at load time, rather than being a data structure that can be loaded in dynamically.
		
		So the entire data structure is basically duplicated wholesale, here, and this is the one that the values from actually matter, in.  I'm probably going to strip the external ones so they're just the names, rather than being the whole particle system.
		
		Hopefully at some point we can alleviate that and allow this to work the way we'd like it to work, but until then, this will exist like this.
	*/
	// Particles are added in alphabetic order of ID.  Higher numbers are drawn last, and hence, on top.

particle_system: [
	{
		id: "3_fire_bright",
		type: "simple",
		spawn_rate: 200,
		time_to_live: 12,
		min_x: -35,
		max_x: 5,
		min_y: -8,
		max_y: 8,
		velocity_y: -200,
		velocity_x: 260,
		velocity_x_random: 200,
		velocity_y_random: 400,
		accel_y: -5,

		#color=255,255,255,255
		animation: {
			id: "sparkle",
			image: "effects/explosion.png",
			x: 198,
			y: 145,
			w: 17,
			h: 16,
			pad: 3,
			frames: 6,
			frames_per_row: 2,
			reverse: true,
			scale: 2,
			duration: 2,
			accel_y: -5,
		},
	},
	{
		id: "2_fire_med",
		type: "simple",
		spawn_rate: 250,
		time_to_live: 96,
		min_x: -35,
		max_x: 5,
		min_y: -10,
		max_y: 10,
		velocity_y: -600,
		velocity_x: 260,
		velocity_x_random: 200,
		velocity_y_random: 1000,
		accel_y: -20,

		#color=255,255,255,255
		delta_a: 2,
		animation: {
			id: "sparkle",
			image: "effects/explosion.png",
			x: 105,
			y: 193,
			w: 13,
			h: 13,
			pad: 3,
			frames: 6,
			frames_per_row: 3,
			duration: 6,
		},
	},
	{
		id: "1_fire_sparks",
		type: "simple",
		spawn_rate: 75,
		time_to_live: 64,
		min_x: -35,
		max_x: 5,
		min_y: -20,
		max_y: 10,
		velocity_y: -600,
		velocity_x: 260,
		velocity_x_random: 200,
		velocity_y_random: 1000,
		accel_y: -30,

		#color=255,255,255,255
		animation: {
			id: "sparkle",
			image: "effects/explosion.png",
			x: 198,
			y: 86,
			w: 17,
			h: 16,
			pad: 3,
			frames: 6,
			frames_per_row: 2,
			scale: 2,
			duration: 4,
		},
	},
	{
		id: "underwater_bubbles",
		type: "simple",
		spawn_rate: 75,
		time_to_live: 64,
		min_x: -45,
		max_x: 35,
		min_y: -20,
		max_y: 10,
		velocity_y: -600,
		velocity_x: -200,
		velocity_x_random: 200,
		velocity_y_random: 1000,
		accel_y: -30,

		#color=255,255,255,255
		animation: {
			id: "sparkle",
			image: "effects/particles2.png",
			x: 62,
			y: 2,
			w: 10,
			h: 10,
			pad: 3,
			frames: 5,
			scale: 2,
			duration: 18,
		},
	},
],


}

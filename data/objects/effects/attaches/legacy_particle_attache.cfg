{
id: "legacy_particle_attache",
prototype: ["effects_attache"],
zorder: "@include data/zorder.cfg:near_player_foreground_effects",
hidden_in_game: false,


types: {
	LegacyParticleSystemInfo: "{
		particle_system: [ParticleSystemData],

		id: string,
		prototype: [string],
		zorder: int,
		hidden_in_game: bool,
		types: map,
		properties: map,
	}",

	ParticleSystemData : "{
		accel_y: int,
		animation: map,
		id: string,
		max_x: int,
		max_y: int,
		min_x: int,
		min_y: int,
		
		delta_a: int|null,
		
		spawn_rate: int,
		time_to_live: int,
		type: string, 	
		velocity_x: int,
		velocity_x_random: int,
		velocity_y: int,
		velocity_y_random: int,
	}",

	SpawnRateData: "[{ name: string, rate: int }]",
},

properties: {
#-------------------------- effects_attache overrides --------------------------#
	do_setup: "[
					initialize_position,
					map(particle_names, add_particles(value)),
				]",

	turn_on: "commands ::	execute(me, [
								map(natural_spawn_rates, set(particle_systems[ value.name ].spawn_rate, value.rate)),
								apply_customizations_for_individual_usage,
							])",

	turn_off: "	execute(me, map(particle_names, set(particle_systems[value].spawn_rate, 0)))",


#-------------------------- storage --------------------------#
	particle_names: { type: "[string]", default: [] },
	natural_spawn_rates: { type: "SpawnRateData", default: [] },


#-------------------------- vars --------------------------#
	_particle_type: {
		type: "string",
		set: "[
			set(_data, value),
			set(particle_names, types_for_name[value]),
			set(natural_spawn_rates,(SpawnRateData <- map(reduced_info, {name: value.id, rate: value.spawn_rate}))),
		]
			where reduced_info = filter(info.particle_system, 'iter', iter.id in types_for_name[value])
			where info = LegacyParticleSystemInfo <- get_document('data/objects/effects/attaches/legacy_particle_attache.cfg')",
			
	},



	types_for_name: "{ string -> [string] } :: {
		'bonfire': ['3_fire_bright', '2_fire_med', '1_fire_sparks'],
		'fire_bubbles': ['1_fire_bubbles_dark'],
		'underwater_bubbles' : ['underwater_bubbles'],
		'test_case' : ['test_case'],
	}",

#-------------------------- vars for customization --------------------------#
	apply_customizations_for_individual_usage: "commands :: [
		if(customized_spawn_rects != null, 
			map(customized_spawn_rects, [
				set(particle_systems[ value.particle_id ].min_x, value.rect[0]),
				set(particle_systems[ value.particle_id ].max_x, value.rect[1]),
				set(particle_systems[ value.particle_id ].min_y, value.rect[2]),
				set(particle_systems[ value.particle_id ].max_y, value.rect[3]),
			])
		),
		
		if(customized_spawn_rates != null, 
			map(customized_spawn_rates, [
				set(particle_systems[ value.particle_id ].spawn_rate, value.magnitude),
			])
		),
		
		
		/* 
			As needed, we could customize additional properties here - most likely velocity_x & y, etc.
			The spawn rect is overwhelmingly the primary thing we want to customize, though.
		*/
	]",

	customized_spawn_rects: { type: "[{ particle_id: string, rect: [int,int,int,int] }]|null", default: null },
	customized_spawn_rates: { type: "[{ particle_id: string, magnitude: int }]|null", default: null },
	

},



#-------------------------- particle definitions --------------------------#
	/*
		Originally, we wanted to do "external loading" of these - define every separate particle system in an individual file, and then load them in as-needed.  However, unlike our new particles that can be attached at runtime, these guys have to exist in the object at load time.  Because this is a general purpose object that's meant to allow us to attach *any* particle system to a target, it means we need to define every one we could hypothetically want to use, right here in this object, all together.
		
		Ironically, this may be just as good for perf as it is bad; we will take the hit of loading all particles in, but once they're loaded, they're likely to stay so.



		One technical note on layering:
		Particles are added in alphabetic order of ID.  Higher numbers are drawn last, and hence, on top.
		
		This only really matters for 'combined' effects like bonfire/fireplace visuals.
	*/


particle_system: [
	{
		id: "3_fire_bright",
		type: "simple",
		spawn_rate: 200,
		time_to_live: 12,
		min_x: -35,
		max_x: 5,
		min_y: -8,
		max_y: 8,
		velocity_y: -200,
		velocity_x: 260,
		velocity_x_random: 200,
		velocity_y_random: 400,
		accel_y: -5,

		animation: {
			id: "sparkle",
			image: "effects/explosion.png",
			x: 198,
			y: 145,
			w: 17,
			h: 16,
			pad: 3,
			frames: 6,
			frames_per_row: 2,
			reverse: true,
			scale: 2,
			duration: 2,
			accel_y: -5,
		},
	},
	{
		id: "2_fire_med",
		type: "simple",
		spawn_rate: 250,
		time_to_live: 96,
		min_x: -35,
		max_x: 5,
		min_y: -10,
		max_y: 10,
		velocity_y: -600,
		velocity_x: 260,
		velocity_x_random: 200,
		velocity_y_random: 1000,
		accel_y: -20,

		#color=255,255,255,255
		delta_a: 2,
		animation: {
			id: "sparkle",
			image: "effects/explosion.png",
			x: 105,
			y: 193,
			w: 13,
			h: 13,
			pad: 3,
			frames: 6,
			frames_per_row: 3,
			duration: 6,
		},
	},
	{
		id: "1_fire_sparks",
		type: "simple",
		spawn_rate: 75,
		time_to_live: 64,
		min_x: -35,
		max_x: 5,
		min_y: -20,
		max_y: 10,
		velocity_y: -600,
		velocity_x: 260,
		velocity_x_random: 200,
		velocity_y_random: 1000,
		accel_y: -30,

		animation: {
			id: "sparkle",
			image: "effects/explosion.png",
			x: 198,
			y: 86,
			w: 17,
			h: 16,
			pad: 3,
			frames: 6,
			frames_per_row: 2,
			scale: 2,
			duration: 4,
		},
	},
	{
		id: "1_fire_bubbles_dark",
		type: "simple",
		spawn_rate: 575,
		time_to_live: 12,
		min_x: -5,
		max_x: 5,
		min_y: -5,
		max_y: 5,
		velocity_y: -200,
		velocity_x: -100,
		velocity_x_random: 200,
		velocity_y_random: 400,
		accel_y: -20,

		animation: {
			id: "sparkle",
			image: "effects/particles2.png",
			x: 275,
			y: 485,
			w: 11,
			h: 11,
			pad: 3,
			frames: 6,
			frames_per_row: 3,
			scale: 2,
			duration: 2,
		},
	},
	{
		id: "underwater_bubbles",
		type: "simple",
		spawn_rate: 75,
		time_to_live: 64,
		min_x: -45,
		max_x: 35,
		min_y: -20,
		max_y: 10,
		velocity_y: -600,
		velocity_x: -200,
		velocity_x_random: 200,
		velocity_y_random: 1000,
		accel_y: -30,

		animation: {
			id: "sparkle",
			image: "effects/particles2.png",
			x: 62,
			y: 2,
			w: 10,
			h: 10,
			pad: 3,
			frames: 5,
			scale: 2,
			duration: 18,
		},
	},
	{
		id: "test_case",
		type: "simple",
		spawn_rate: 575,
		time_to_live: 12,
		min_x: -5,
		max_x: 5,
		min_y: -5,
		max_y: 5,
		velocity_y: -200,
		velocity_x: -100,
		velocity_x_random: 200,
		velocity_y_random: 400,
		accel_y: -20,

		animation: {
			id: "sparkle",
			image: "effects/particles2.png",
			x: 51,
			y: 423,
			w: 24,
			h: 24,
			pad: 3,
			frames: 1,
			scale: 2,
			duration: 2,
		},
	},
],
}

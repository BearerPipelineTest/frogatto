{
id: "teleport_pedestal",
teleport_offset_x: 32,
teleport_offset_y: -100,
is_strict: true,
zorder: "@include data/zorder.cfg:exterior_decor",
solid_area: [16,6,48,28],
solid_shape: "rect",
editor_info: {
	category: "props",
},
prototype: ["transient_object"],


properties: {
	material_sound: "enum stone",
	particle_amount: "150",
#-------------------------- vars --------------------------#
	_dest_level: { type: "string", default: '', editor_info: { type: "label" }},
	_dest_door: { type: "string", default: '', editor_info: { type: "label", info: "_dest_level" }},

	_glow: { type: "obj teleport_pedestal.glow_mask", init: "object('teleport_pedestal.glow_mask',img_mid_x,img_mid_y,facing)", persistent: false },
	_last_stood_on: { type: "int", default: -100, persistent: false },

	particles_wide: { type: "obj particle_attache", init: "object('particle_attache', {
			_particle_type: 'teleport_pedestal_wide',
			x: mid_x,
			y: mid_y,
			parent: me,
			time_to_die: 150,
			custom_relative_pos_default: {
				mid_x: 0,
				mid_y: 22,
			},
		})",
	},

	particles_thin: { type: "obj particle_attache", init: "object('particle_attache', {
			_particle_type: 'teleport_pedestal_thin',
			x: mid_x,
			y: mid_y,
			parent: me,
			time_to_die: 150,
			custom_relative_pos_default: {
				mid_x: 0,
				mid_y: 22,
			},
		})",
	},

},

on_jumped_on: "if(_dest_door and cycle > 100, [
	if(animation != 'glow', [
		sound('teleporter-warmup.wav'),
		animation('glow')
	]),
	set(_last_stood_on, cycle)
])",

on_end_glow_anim: "[
	animation('cooldown'),
	if(level.player.standing_on = me, fire_event(me, 'transported'))
]",

on_transported: "[
	if(_dest_door, [
		screen_flash([255,255,255,255], [0,0,0,-5], 50),
		teleport(if(_dest_level and _dest_level != level.id, _dest_level,null), _dest_door,'instant'),
		sound('teleport.wav')
	])
]",

on_end_cooldown_anim: "animation('normal')",

on_create: "[
	add_object(particles_wide),
	add_object(particles_thin),
	add_object(_glow),
]",

on_process_glow: "if(level.player.standing_on = me, [
	if(time_in_animation = 100, screen_flash([255,255,255,0], [0,0,0,5], 50)),
	set(_glow.alpha, (150*time_in_animation)/150),
	set(_glow.brightness, (500*time_in_animation)/150),
	set(particles_thin.emission_rate, (particle_amount*time_in_animation)/150),
	set(particles_wide.emission_rate, (particle_amount*time_in_animation)/150),
])",

on_process_cooldown: "[
	set(_glow.alpha, (150*(75-time_in_animation))/75),
	set(_glow.brightness, (800*(75-time_in_animation))/75),
	set(particles_thin.emission_rate, (particle_amount*(75-time_in_animation))/75),
	set(particles_wide.emission_rate, (particle_amount*(75-time_in_animation))/75),
]",


on_enter_normal_anim: "[
	set(particles_thin.emission_rate, 0),
	set(particles_wide.emission_rate, 0),
]",

animation: [
	{
		image: "props/interactive-props.png",
		body_rect: "all",
		id: "normal",
		rect: [192,0,255,32],
		duration: 200,
	},
	{
		image: "props/interactive-props.png",
		body_rect: "all",
		id: "glow",
		rect: [192,33,255,65],
		frames: 3,
		frames_per_row: 1,
		pad: 0,
		duration: 50,
	},
	{
		image: "props/interactive-props.png",
		body_rect: "all",
		id: "cooldown",
		rect: [192,33,255,65],
		frames: 3,
		frames_per_row: 1,
		pad: 0,
		play_backwards: true,
		duration: 25,
	},
],

object_type: {
	id: "glow_mask",
	zorder: "@include data/zorder.cfg:near_player_foreground_effects",
	on_create: "set(alpha,0)",
	animation: {
		blend:["src_alpha","one"],
		image: "props/interactive-props.png",
		id: "normal",
		rect: [192,177,255,209],
		duration: 200,
	},
},
}

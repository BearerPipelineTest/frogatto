{
id: "light_intensity_trigger",
prototype: ["pullable"],
editor_info: {
	category: "keys & triggers",
	help: "Trigger on the amount of light (vs shadow). Can be connected to gates and such.",
},
timer_frequency: 18,

properties: {
	#-------------------------- constructor/destructor logic --------------------------#
	shadow_effect_controller: "null | obj shadow_effect_controller :: 
		find(level.active_chars, value is obj shadow_effect_controller)",

	#-------------------------- light level logic --------------------------#
	light_level_on: { 
		type: "decimal", 
		editor_info: { type: "decimal", value: "0.7", min_value: 0.0, max_value: 1.0 }
	},
	light_level_off: { 
		type: "decimal", 
		editor_info: { type: "decimal", value: "0.5", min_value: 0.0, max_value: 1.0 }
	},

	#-------------------------- special damage type --------------------------#
	damage_types_allowed_to_toggle_this_to_on: "[]", #Only react to light.
	damage_types_allowed_to_toggle_this_to_off: "[]",
},


events: {
	//Without a shadow effect controller, the level will not load outside of the
	//editor. (This is just a safety, really, so we don't accidentally remove
	//shadows (and thus light) from a level and forget we made a puzzle impossible.
	done_create: "//Check must be after create, or the shadow effect controller isn't found.
		if(level.in_editor,
			if(not me.shadow_effect_controller, debug('Warning: No shadow effect controller found on level for light intensity trigger.')),
			null asserting me.shadow_effect_controller |       'No shadow effect controller found on level for light intensity trigger.'
		)
	",
	
	timer: "
		if(shadow_effect_controller and not has_toggled_recently,
			if(is_this_active,
				if(shadow_effect_controller.light_at(me).strength < me.light_level_off,
					do_toggle_to(false)
				),
				if(shadow_effect_controller.light_at(me).strength > me.light_level_on,
					do_toggle_to(true)
				)
			)
		)
	",
	
	end_anim: "set(animation, animation)",
},

animation: [
	{
		"@base": true,
		image: "props/brazier.png",
		palettes: "@include data/palettes.cfg:seaside_palettes + forest_palettes + cave_palettes",
		body_area: "all",
		pad: 3,
	},
	{
		id: "normal",
		rect: [1,1,48,48],
	},
	{
		id: "pushed",
		rect: [1,52,48,99],
		duration: 6,
		frames: 5,
	},
],
}
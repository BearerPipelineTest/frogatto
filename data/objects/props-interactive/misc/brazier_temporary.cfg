{
id: "brazier_temporary",
prototype: ["pullable_untracked"],
editor_info: {
	category: "keys & triggers",
	help: "A lever that can be pushed one way or the other. Can be connected to gates and such.",
},

properties: {
#-------------------------- constructor/destructor logic --------------------------#
	pullable_untracked_obj_constructor: "[add_object(_fire_sound_loop), add_object(_fire_glow)]",



#-------------------------- coordinator-interfacing logic --------------------------#
	coordinator_object_type: "'brazier_temporary_coordinator'",


#-------------------------- pullable overrides --------------------------#

	visually_turn_on: " [
							sound('click.wav'),
							set(animation, 'pushed'),
							add_object(burn_particles),
							_fire_sound_loop.turn_on,
							_fire_glow.turn_on,
						]",
	visually_turn_off: "[
							sound('click.wav'),
							set(animation, 'normal'),
							remove_object(burn_particles),
							_fire_sound_loop.turn_off,
							_fire_glow.turn_off,
						]",
	

#-------------------------- custom logic --------------------------#

	burn_particles: {
		type: "obj legacy_particle_attache",
		init: "object('legacy_particle_attache', mid_x, mid_y, {
			_particle_type: 'bonfire',
			parent: me,
			time_to_die: 20,
			custom_relative_pos_default: {mid_x: 0, mid_y: -15},
			variable_name: 'burn_particles',
		})",
		persistent: false,
	},
	
	_fire_sound_loop: {
		type: "obj sound_source_individual_attache",
		init: "object('sound_source_individual_attache', mid_x, mid_y, {
			parent: me,
			sound_file:'ambient/fireplace.ogg',
			starts_with_sound_on: false,
			variable_name: '_fire_sound_loop',
		})",
		persistent: false,
	},

	_fire_glow: {
		type: "obj effects_attache_glow_source",
		init: "object('effects_attache_glow_source', mid_x, mid_y, {
			time_to_die: 0,
			parent: me,
			custom_relative_pos_default: {mid_x: 0,	mid_y: -15},
			base_alpha: 160,
			flicker_type: enum sputter,
			graphics: enum firey,
			scale_factor: 1.00,
			zorder: 5000,
			variable_name: '_fire_glow',
		})",
		persistent: false,
	},

	burnout_cooldown: "if(_lock_coordinator != null,
							_lock_coordinator.burnout_cooldown asserting _lock_coordinator is obj brazier_temporary_coordinator,
							60
						)",

#-------------------------- special damage type --------------------------#
	damage_types_allowed_to_toggle_this_to_on: "[enum fire]",
	damage_types_allowed_to_toggle_this_to_off: "[enum ice]",
},


on_end_anim: "set(animation, animation)",

on_process: "if(cycle - last_toggled > burnout_cooldown, do_toggle_to(false))",

animation: [
	{
		"@base": true,
		image: "props/brazier.png",
		palettes: "@include data/palettes.cfg:seaside_palettes + forest_palettes + cave_palettes",
		body_area: "all",
		pad: 3,
	},
	{
		id: "normal",
		rect: [1,1,48,48],
	},
	{
		id: "pushed",
		rect: [1,52,48,99],
		duration: 6,
		frames: 5,
	},
],
}
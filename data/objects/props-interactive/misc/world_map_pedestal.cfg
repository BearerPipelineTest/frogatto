{
id: "world_map_pedestal",
prototype: ["transient_object"],
is_strict: true,
teleport_offset_x: 32,
teleport_offset_y: -200,
zorder: "@include data/zorder.cfg:exterior_decor",
solid_area: [16,8,48,31],
solid_shape: "rect",

editor_info: {
	category: "props",
},


properties: {
	material_sound: "enum stone",
	particle_amount: "150",
#-------------------------- vars --------------------------#
	_glow: { type: "obj world_map_pedestal.glow_mask", init: "object('world_map_pedestal.glow_mask',img_mid_x,img_mid_y,facing)", persistent: false },
	_last_stood_on: { type: "int", default: -100, persistent: false },
	_glowing: { type: 'bool', default: false, persistent: false, },



	particles_wide: { type: "obj particle_attache", init: "object('particle_attache', {
			_particle_type: 'teleport_pedestal_worldmap_wide',
			x: mid_x,
			y: mid_y,
			parent: me,
			time_to_die: 150,
			custom_relative_pos_default: {
				mid_x: 0,
				mid_y: -22,
			},
		})",
		persistent: false,
	},

	particles_thin: { type: "obj particle_attache", init: "object('particle_attache', {
			_particle_type: 'teleport_pedestal_worldmap_thin',
			x: mid_x,
			y: mid_y,
			parent: me,
			time_to_die: 150,
			custom_relative_pos_default: {
				mid_x: 0,
				mid_y: -22,
			},
		})",
		persistent: false,
	},

},


on_jumped_on: "if(cycle > 20, [
	if(animation != 'glow', [
		sound('teleporter-warmup.wav'),
		animation('glow'),
	]), 
	set(_last_stood_on, cycle),
])",

on_end_glow_anim: "[
	animation('cooldown'),
	if(level.player.standing_on = me, fire_event(me,'transported') ),
]",

on_transported: "[
	//TODO: Add spawn()-like syntax for spawn_player(), so the following would work: spawn_player('map_selector', 0, 0, {_player: level.player, _came_from_level:level.id}),
	spawn_player('map_selector', 0, 0, 1, [set(child._player, level.player), set(child._came_from_level, level.id)]),
	teleport('main-map.cfg','','instant'),
	sound('teleport.wav'),
	screen_flash([255,255,255,255], [0,0,0,-5], 50),
]",

on_end_cooldown_anim: "animation('normal')",

on_create: "[
	add_object(particles_wide),
	add_object(particles_thin),
	add_object(_glow),
]",

on_process_glow: "if(level.player.standing_on = me, [
	if(time_in_animation = 100,
		[
			screen_flash([255, 255, 255, 0], [0, 0, 0, 5], 50),
			set(_glowing, true),
		]),
	set(_glow.alpha, (150*time_in_animation)/150), 
	set(_glow.brightness, (500*time_in_animation)/150), 
	set(particles_thin.emission_rate, (particle_amount*time_in_animation)/150),
	set(particles_wide.emission_rate, (particle_amount*time_in_animation)/150),
])",

on_process_cooldown: "[
	if(_glowing,
		screen_flash([255, 255, 255, 255], [0, 0, 0, -5], 50)),
	set(_glow.alpha, (150*(75-time_in_animation))/75),
	set(_glow.brightness, (800*(75-time_in_animation))/75),
	set(particles_thin.emission_rate, (particle_amount*(75-time_in_animation))/75),
	set(particles_wide.emission_rate, (particle_amount*(75-time_in_animation))/75),
	set(_glowing, false),
]",

on_enter_normal_anim: "[
	set(particles_thin.emission_rate, 0),
	set(particles_wide.emission_rate, 0),
]",


animation: [
	{
		image: "props/interactive-props.png",
		body_rect: "all",
		id: "normal",
		rect: [0,219,63,255],
		duration: 200,
	},
	{
		image: "props/interactive-props.png",
		body_rect: "all",
		id: "glow",
		rect: [64,219,127,255],
		frames: 3,
		pad: 0,
		duration: 50,
	},
	{
		image: "props/interactive-props.png",
		body_rect: "all",
		id: "cooldown",
		rect: [64,219,127,255],
		frames: 3,
		pad: 0,
		play_backwards: true,
		duration: 25,
	},
],




object_type: {
	id: "glow_mask",
	zorder: "@include data/zorder.cfg:near_player_foreground_effects",
	
	on_create: "set(alpha,0)",
	
	animation: {
		blend: ["src_alpha","one"],
		image: "props/interactive-props.png",
		id: "normal",
		rect: [128,182,191,218],
		duration: 200,
	},
},

}

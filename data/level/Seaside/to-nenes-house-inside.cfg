{
	"air_resistance": 20,
	"auto_move_camera": [0,0],
	"character": [
		{
			"_uuid": "9d07c8a0663a402b953545e5047ae078",
			"current_frame": "normal",
			"custom": true,
			"is_human": true,
			"label": "_fcd2bf2",
			"type": "frogatto_playable",
			"x": 480,
			"y": 320
		},
		{
			"_uuid": "729481332ef14e0e9d27041bbe0eef57",
			"current_frame": "normal",
			"custom": true,
			"label": "nene_npc",
			"on_freak_out": "transient_speech_dialog(self, [~If that gets in the batter,\\nI swear...~])",
			"on_lazy_frog": "speech_dialog(
					self,		[~So, have you killed the ants yet?~],
								set(frogatto.animation, 'emote_raisedfinger'),
					frogatto,	[~Nope, I'm on break.~],
					self,		[~You're... on break?~],
								if((not frogatto.get_stored_event('nenes_basement_unlocked') = 1) and (not find(level.chars, value is obj padlock_key and value.color = 'silver')) and if(frogatto.swallowed_object != null, (not frogatto.swallowed_object is obj padlock_key),true), spawn('padlock_key',800,150,{valid_levels: ['to-nenes-house-inside.cfg'], color:'silver'})),
							 	[~Your job is to pick up a key...~],
							 	[~Go to the basement with the\\nassistance of an <em>elevator</em>...~],
						 		[~Unlock a door with the aforementioned key...~],
						 		[~Kill a small number of insects...~],
						 		[~And then return to inform me of the murder.~],
						 		[~How is this not something that\\ncan be done in one fell swoop?~],
								set(frogatto.animation, 'emote_confused'),
					frogatto,	[~Um... break's over.~])
						 where frogatto = (obj frogatto_playable <- level.player)",
			"on_squeamish_frog": "speech_dialog(
											self,			[~Ah, so you're carrying one of the ants.\\nYou'll get rid of it, won't you?~],
									   						set(level.player.animation, 'emote_oh'),
											level.player,	[~I don't know, now that I think of it...\\nIt's not their fault they're here,\\nthe ants are just playing to their instincts.~],
											self,			[~If you say so... Just throw it outside.\\nAs long as they're out of my food, I'm good.~]
									   		)",
			"on_talk": "[swallow_event(),
			
			/*---frogatto didn't complete the quest yet; may or may not have an ant in his belly*/
			if((frogatto.get_stored_event('talked_to_nene') = 1) and 
				(frogatto.get_stored_event('nenes_basement_ants_killed') < 3),
						if(frogatto.swallowed_object != null and ((frogatto.swallowed_object is obj ant_black) or (frogatto.swallowed_object is obj ant_black.thrown)),
								fire_event('squeamish_frog'), fire_event('lazy_frog'))
			),
					
			if( (frogatto.get_stored_event('nenes_basement_ants_killed') < 3) and (not frogatto.get_stored_event('talked_to_nene') = 1),
	              [speech_dialog(
	              	frogatto,	frogatto.store_event('talked_to_nene', 1),
								set(frogatto.animation, 'emote_raisedfinger'),
								[~Hey Nene, what's cooking?~],
					self,		[~I'm making a cake.\\nWould you like to have some?~],
								set(frogatto.animation, 'emote_talk'),
					frogatto, 	[~Nah, I'd better get to town.~],
								set(frogatto.animation, 'emote_talk'),
								[~I have serious business to attend to.~]),
					if((not frogatto.get_stored_event('nenes_basement_unlocked') = 1),
						[speech_dialog(self,
								self,		[~Oh, well maybe before you go\\nyou could look at my basement.~],
											set(frogatto.animation, 'emote_confused'),
								frogatto,	[~Your basement?~],
															
											if((not find(level.chars, value is obj padlock_key and value.color = 'silver')) and if(frogatto.swallowed_object != null, (not frogatto.swallowed_object is obj padlock_key), true), spawn('padlock_key',mid_x - 60,150,{valid_levels: ['to-nenes-house-inside.cfg'], color:'silver'})),
															
								self,		[~Yes, here's the key.\\nThere're some ants down there.~],
											[~I've been meaning to get rid of them,\\nbut I just can't find the time.~],
											[~And now, they've gone and\\nruined a whole bag of flour!~],
											set(frogatto.animation, 'emote_geez'),
								frogatto,	[~Ick.~],
								self,		[~I know, right?~],
											[~So you showed up, and I thought ...\\nhey, maybe you could be a gentleman,\\nand help me out here, hm?~],
											set(frogatto.animation, 'emote_oh'),
											frogatto, [~Yeah, that sounds ... opportune.~],
											set(frogatto.animation, 'emote_raisedfinger'),
								frogatto,	[~How much were you figuring on\\npaying for a pest exterminator?~],
								self,		[~Well sheesh, I thought you'd\\ndo it for free for a friend!~],
											[~But if you're going to be like that\\nI think I have just the thing...~],
											set(level.focus, [get_object_or_die(level,'the_treasure')]),
											[~You see that foot locker of mine over there?~],
											set(level.focus, []),
											set(frogatto.animation, 'emote_raisedfinger'),
								frogatto,	[~I think I know where this is going!~],
								self,		[~Yep, if you clear out those ants, there's\\na present in there, with your name on it.~],
											[~So, have at it.\\nGo show those ants who's boss.~]
						)]
					)
				]),
			if((frogatto.get_stored_event('nenes_basement_ants_killed') >= 3) and (frogatto.get_stored_event('talked_to_nene') = 1),
				if((not frogatto.get_stored_event('nenes_treasure_chest_unlocked') = 1),
					[speech_dialog(
					self,		[~You really did do it.\\nYou rock!~],
								[~So, I imagine you're wondering about that present...~],
								set(frogatto.animation, 'emote_confused'),
					frogatto,	[~Is it cake?~],
					self,		[~Ha.  No, it's quite a bit better.\\nIt's a little souvenir from the Militia.~],
								[~It's a Fire Talisman, and I'd like you to have it.~],
					frogatto,	set(frogatto.animation, 'emote_confused'),
								[~Wow... That's... awesome, but\\nwhy on earth are you giving this to me?~],
								set(frogatto.animation, 'emote_geez'),
								[~It's a bit much for getting rid of a few ants!~],
					self,		[~Honestly?  I had originally meant to\\ngive it to you as a birthday present.~],
								[~I just never got around to it.~],
								[~I don't need it myself, and I know\\nyou'd get a LOT of use out of it.~],
								[~So...  here's the key, and Happy Birthday!\\nBetter late than never, right?~],
								if((not frogatto.get_stored_event('nenes_treasure_chest_unlocked') = 1) and (not find(level.chars, value is obj padlock_key and value.color = 'gold')) and if(frogatto.swallowed_object != null, (not frogatto.swallowed_object is obj padlock_key),true), spawn('padlock_key',mid_x - 60,150,{valid_levels: ['to-nenes-house-inside.cfg'], color:'gold'})),
					frogatto,	set(frogatto.animation, 'emote_confused'),
								[~You know, I'm really lucky to\\nhave friends like you!~],
								[~...~],
								set(frogatto.animation, 'emote_raisedfinger'),
								[~Say, that wouldn't also happen\\nto be <em>Birthday</em> Cake, would it?~],
					self,		[~...\\nWhat?  No!~],
								[~Just take the present,\\nyou silly, silly frog.~],
				
					),
				
					],
			
					speech_dialog(
						self,		[~Hey, thanks for taking care\\nof those ants down there!~],
									set(frogatto.animation, 'emote_nod'),
						frogatto,	[~Of course.\\nI don't disappoint!~],
									set(frogatto.animation, 'emote_raisedfinger'),
									[~And thanks for the gift,\\nby the way.~],
						self,		[~You're welcome.~]
					)
				)
			)
			
								       
				] where frogatto = (obj frogatto_playable <- level.player)",
			"property_data": {
				"consider_object": "[if(obj.basic_type in ['ant_black','ant_red','ant_gold','ant_platform_red'], fire_event(me, 'freak_out'))]",
				"max_x": 875,
				"min_x": 558,
				"potters": "always"
			},
			"type": "nene_npc",
			"x": 704,
			"y": 119
		},
		{
			"_uuid": "b43903ea45b946099c40ba5914427ef4",
			"current_frame": "normal",
			"custom": true,
			"label": "nene_interior_door",
			"property_data": {
				"_dest_door": "nene_ext_door",
				"_dest_level": "to-nenes-house.cfg"
			},
			"type": "seaside_house_interior_door_large",
			"x": 576,
			"y": 256
		},
		{
			"_uuid": "d802eada3bd24f3a99472432b302424a",
			"current_frame": "normal",
			"custom": true,
			"label": "_47ef3a92",
			"type": "wooden_shelves_fruit2",
			"x": 736,
			"y": 96
		},
		{
			"_uuid": "acc1871d1c79426ca5023de90c42dc38",
			"current_frame": "normal",
			"custom": true,
			"label": "_2236999d",
			"type": "wooden_bed",
			"x": 1216,
			"y": 32
		},
		{
			"_uuid": "5e7fed6383024325b4c0ab8f9e6cea8a",
			"current_frame": "normal",
			"custom": true,
			"label": "_1c3dd656",
			"type": "wall_clock",
			"x": 672,
			"y": 0
		},
		{
			"_uuid": "4bffe3f0c49f4a32b28268e65e389641",
			"current_frame": "normal",
			"custom": true,
			"label": "_5612ac8a",
			"type": "ceiling_lamp",
			"x": 704,
			"y": 544
		},
		{
			"_uuid": "77019b339053432095b56a5e5fedaa9a",
			"current_frame": "normal",
			"custom": true,
			"label": "_63fdc42b",
			"type": "ceiling_lamp",
			"x": 352,
			"y": 544
		},
		{
			"_uuid": "180976e51c714e7e81b34b311b53fa4f",
			"current_frame": "normal",
			"custom": true,
			"label": "_3bf1aff0",
			"type": "potbelly_stove",
			"x": 384,
			"y": 704
		},
		{
			"_uuid": "fe655acbc91a4a0891d110234fd2c24b",
			"current_frame": "normal",
			"custom": true,
			"label": "_2539205a",
			"type": "wooden_table",
			"x": 480,
			"y": 768
		},
		{
			"_uuid": "b82f61abd0014820acf2ed56819d02a0",
			"current_frame": "normal",
			"custom": true,
			"label": "_45ee949d",
			"property_data": {
				"_move_speed": 4,
				"_x2_bound": 960,
				"_x_bound": 864,
				"_y2_bound": 799,
				"_y_bound": 384
			},
			"type": "platform-seaside-interior",
			"x": 864,
			"y": 448
		},
		{
			"_uuid": "f064afb491934e7a888e9d1032bb0f9f",
			"current_frame": "normal",
			"custom": true,
			"label": "_412b3ea1",
			"type": "bubbling_pot",
			"x": 602,
			"y": 108
		},
		{
			"_uuid": "e5bb1fadd70145b38a112daffd8551ea",
			"current_frame": "normal",
			"custom": true,
			"label": "_198b028c",
			"type": "toaster",
			"x": 557,
			"y": 742
		},
		{
			"_uuid": "81ab531911b646a0aab891548aea20f5",
			"current_frame": "normal",
			"custom": true,
			"label": "_7554426d",
			"type": "wall_clock",
			"x": 512,
			"y": 640
		},
		{
			"_uuid": "37c20547dfb14e71877ae12e594bd3a2",
			"current_frame": "normal",
			"custom": true,
			"label": "_39a4fc1b",
			"type": "kettle_brass",
			"x": 647,
			"y": 100
		},
		{
			"_uuid": "8bfd67475c3e4a78a7f76bbf5a044acd",
			"current_frame": "normal",
			"custom": true,
			"label": "_1b130d9e",
			"type": "plant_potted",
			"x": 1354,
			"y": -50
		},
		{
			"_uuid": "e7ae2e25563944abbd91d5af9b4ccd66",
			"current_frame": "normal",
			"custom": true,
			"face_right": false,
			"label": "_137f94",
			"type": "wooden_wardrobe",
			"x": 1344,
			"y": -32
		},
		{
			"_uuid": "285afd53653b46c1b0bbd30ccd5bef13",
			"current_frame": "normal",
			"custom": true,
			"face_right": false,
			"label": "_1b5f8216",
			"type": "wooden_shelves_fruit1",
			"x": 800,
			"y": 96
		},
		{
			"_uuid": "548d8094e9b046aea27dff29dcf915c7",
			"current_frame": "normal",
			"custom": true,
			"face_right": false,
			"label": "_39d642d7",
			"type": "refrigerator",
			"x": 480,
			"y": 64
		},
		{
			"_uuid": "9ddece588cf74ec4a49ed34d20e40076",
			"current_frame": "normal",
			"custom": true,
			"label": "_5d9af6bb",
			"type": "wooden_shelves_fruit1",
			"x": 192,
			"y": 288
		},
		{
			"_uuid": "346b3604bd534d47a76677b4dc5a44fa",
			"current_frame": "normal",
			"custom": true,
			"label": "_27aa3bdc",
			"type": "sofa_red",
			"x": 0,
			"y": 0
		},
		{
			"_uuid": "e377d51debcd4d699ce999cd280267f8",
			"current_frame": "normal",
			"custom": true,
			"label": "_37f1dc77",
			"type": "wooden_nightstand",
			"x": -64,
			"y": 32
		},
		{
			"_uuid": "37db39636cb64b7fbe0bbaab0518cc58",
			"current_frame": "normal",
			"custom": true,
			"label": "_7750ca9e",
			"type": "wooden_shelves_fruit2",
			"x": -96,
			"y": 0
		},
		{
			"_uuid": "ddb4b9e6dc0949b99cbb859213f3b5be",
			"current_frame": "normal",
			"custom": true,
			"label": "_4f1d8425",
			"type": "painting_leaf",
			"x": 704,
			"y": 288
		},
		{
			"_uuid": "a300b911ea74423dbf1fe07703799a30",
			"current_frame": "normal",
			"custom": true,
			"label": "_faef6b7",
			"type": "wooden_shelves_fruit2",
			"x": 480,
			"y": 288
		},
		{
			"_uuid": "08826f6b5eef4891bdaad4277a0d9f97",
			"current_frame": "normal",
			"custom": true,
			"face_right": false,
			"label": "_1f60d2ee",
			"type": "wooden_table_clothed",
			"x": 576,
			"y": 96
		},
		{
			"_uuid": "e1a8763fae40445c8de62a3c822dd8a2",
			"current_frame": "normal",
			"custom": true,
			"face_right": false,
			"label": "_5a0802aa",
			"type": "kitchen_sink",
			"x": 608,
			"y": 704
		},
		{
			"_uuid": "55f7af4ad6364cb19f865c20fd66f1f2",
			"current_frame": "normal",
			"custom": true,
			"label": "_33b6ca4d",
			"type": "crate_throwable_respawning",
			"x": 320,
			"y": 736
		},
		{
			"_uuid": "df4b7116b47a411eab8eee38563a8cdf",
			"current_frame": "normal",
			"custom": true,
			"label": "_49fb8429",
			"type": "crate_throwable_respawning",
			"x": 288,
			"y": 704
		},
		{
			"_uuid": "02678620a47040669391337548e71325",
			"current_frame": "normal",
			"custom": true,
			"label": "_44345f5e",
			"type": "crate_throwable_respawning",
			"x": 288,
			"y": 768
		},
		{
			"_uuid": "f884e63230e64b5c8936e7524a8017ed",
			"current_frame": "normal",
			"custom": true,
			"label": "_14b4285d",
			"type": "crate_throwable_respawning",
			"x": 320,
			"y": 768
		},
		{
			"_uuid": "de3490415c1d47daa767305ac538e2b3",
			"current_frame": "normal",
			"custom": true,
			"label": "_61f486a1",
			"type": "crate_throwable_respawning",
			"x": 288,
			"y": 736
		},
		{
			"_uuid": "dac5af5d64754fb2bdb46a94363fbee6",
			"current_frame": "normal",
			"custom": true,
			"label": "_2bfb85eb",
			"type": "seaside_interior_window",
			"x": 1248,
			"y": -64
		},
		{
			"_uuid": "d931f6859ac94df0a0a223903d86e233",
			"current_frame": "normal",
			"custom": true,
			"label": "_47deb2d2",
			"type": "seaside_interior_window",
			"x": 96,
			"y": -64
		},
		{
			"_uuid": "2ff7064b66cc470fbd4b68d5fac168c3",
			"current_frame": "normal",
			"custom": true,
			"label": "_2eb1876",
			"type": "seaside_interior_window_large",
			"x": 800,
			"y": -96
		},
		{
			"_uuid": "ce113f19511f4ffa88a64eaba94d7c33",
			"current_frame": "normal",
			"custom": true,
			"label": "_2c45866c",
			"type": "seaside_interior_window_large",
			"x": 480,
			"y": -96
		},
		{
			"_uuid": "29afa0a6339c45ceb19d6f1ad21d176a",
			"current_frame": "normal",
			"custom": true,
			"label": "_59ea950a",
			"property_data": {
				"color": "silver",
				"event_name": "nenes_basement_unlocked"
			},
			"type": "padlock",
			"x": 766,
			"y": 776
		},
		{
			"_uuid": "0807bba1c8e844fb9da7909b6252d7f7",
			"current_frame": "normal",
			"custom": true,
			"label": "door_basement",
			"on_talk": "if(locks, [speech_dialog(level.player,
								set(level.player.animation,'emote_geez'),
								[~Well, dangit, this door is locked.~],
								set(level.player.animation,'emote_confused'),
								[~Can't a guy sneak into his neighbor's\\nbasement uninvited these days?~]),
								swallow_event()])",
			"property_data": {
				"_dest_door": "entrance",
				"_dest_level": "nenes-basement.cfg"
			},
			"type": "seaside_house_interior_door",
			"x": 736,
			"y": 704
		},
		{
			"_uuid": "69cfc16e923143a9a31258790903905a",
			"current_frame": "normal",
			"custom": true,
			"label": "_3875bd74",
			"property_data": {
				"sound_file": "ambient/house-interior-seaside.ogg"
			},
			"type": "sound_source_constant",
			"x": 384,
			"y": 224
		},
		{
			"_uuid": "a0aec8026b2d4874a664dc2a81843944",
			"current_frame": "normal",
			"custom": true,
			"label": "_60b02616",
			"on_talk": "speech_dialog(set(level.player.animation,'emote_confused'),
			level.player,[~It says, \"Elegant Bird, Suddenly\\nPlaced in Undignified Predicament,~],
			set(level.player.animation,'emote_confused'),
			level.player, [~Vocally Expresses Displeasure\\nRegarding Newfound Situation.\"~],
			set(level.focus, [nene, level.player]),
			set(level.player.facing,0),
			nene, [~Best.  Sound.  <em>Ever.</em>~],
			set(level.player.animation,'emote_geez'),
			level.player, [~What on earth are you on about?~],
			nene, [~You know, when there's a cartoon bird\\nthat gets grabbed or something, and it goes...~],
			set(level.focus, [nene]),
			set(level.zoom, 3),
			sound('elegant-bird.wav'),
			nene, [~<em>BRAAAAAWWWKKKK!!!</em>~],
			set(level.zoom, 2),
			set(level.focus, [nene, level.player]),
			nene, [~Comedy gold.  Every time.~],
			set(level.player.animation,'emote_confused'),
			level.player, [~Oh. I like that sound,\\nbut are you sure it's the best?~],
			set(level.player.animation,'emote_raisedfinger'),
			level.player, [~What about \"Unseen Cat Screeches\\nImmediately Following Offscreen Commotion?\"~],
			nene, [~Nah, too mainstream.~],
			set(level.player.animation,'emote_impatient'),
			level.player, [~Okay, whatever you say.\\nI guess the bigger question is...~],
			set(level.player.animation,'emote_confused'),
			level.player, [~Did somebody really write an entire\\nbook about a single sound?~],
			nene, [~A trilogy, actually.~],
			set(level.focus,[]))
			where nene = get_object_or_die(level,'nene_npc')",
			"type": "wooden_shelves_big_books3",
			"x": 978,
			"y": 32
		},
		{
			"_uuid": "cb7c27c248f24e1890a38014f9e5f818",
			"current_frame": "normal",
			"custom": true,
			"label": "the_treasure",
			"property_data": {
				"event_name": "nenes_house_treasure_taken",
				"spawn_properties": {
					"kind": "@eval enum item_fire_breath_talisman"
				},
				"spawn_type": "ability_talisman"
			},
			"type": "treasure_chest",
			"x": 1408,
			"y": 0
		},
		{
			"_uuid": "a69a6f1134664a618df936aaa7464a4f",
			"current_frame": "normal",
			"custom": true,
			"label": "_1456e3d6",
			"property_data": {
				"color": "gold",
				"event_name": "nenes_treasure_chest_unlocked"
			},
			"type": "padlock",
			"x": 1456,
			"y": 58
		},
		{
			"_uuid": "560ca808b2f04e99b77d69cbbf7e85d8",
			"current_frame": "normal",
			"custom": true,
			"label": "_7a04184e",
			"type": "seaside_interior_window",
			"x": -64,
			"y": -64
		},
		{
			"_uuid": "d9540adc2a6d49998ada4f6a4c98e5aa",
			"current_frame": "normal",
			"custom": true,
			"label": "_2b31200f",
			"type": "seaside_interior_window",
			"x": 1408,
			"y": -64
		}
	],
	"dimensions": [-448,-384,1855,1318],
	"id": "to-nenes-house-inside.cfg",
	"music": "FrogattoChill.ogg",
	"preloads": "",
	"segment_height": 0,
	"segment_width": 0,
	"serialized_objects": {
		"character": []
	},
	"set_screen_resolution_on_entry": false,
	"tile_map": [
		{
			"tiles": ",,,,,,,,,,,,,,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,,,,,,ins,ins,ins,ins,ins,ins,ins,ins
ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins",
			"unique_tiles": ",ins",
			"variations": "",
			"x": -224,
			"x_speed": 100,
			"y": -288,
			"y_speed": 100,
			"zorder": "interior_background_tiles"
		},
		{
			"tiles": "int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,int,int,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
,",
			"unique_tiles": ",int",
			"variations": "",
			"x": -736,
			"x_speed": 100,
			"y": -640,
			"y_speed": 100,
			"zorder": "interior_solid_ground_tiles"
		},
		{
			"tiles": ",,,,,,,iss,,,,,,,,,,,,,,,,,,,,,,,,,,,,,iss
,,,,,,,iss,,,,,,,,,,,,,,,,,,,,,,,,,,,,,iss
,,,,,,,iss,,,,,,,,,,,,,,,,,,,,,,,,,,,,,iss
,,,,,,,iss,,,,,,,,,,,,,,,,,,,,,,,,,,,,,iss
,,,,,,,iss,,,,,,,,,,,,,,,,,,,,,,,,,,,,,iss
,,,,,,,iss,,,,,,,,,,,,,,,,,,,,,,,,,,,,,iss
,,,,,,,iss,,,,,,,,,,,,,,,,,,,,,,,,,,,,,iss
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,",
			"unique_tiles": ",iss",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": -128,
			"y_speed": 100,
			"zorder": "pillars"
		},
		{
			"tiles": ",
,
,
,
,
,
,
,
,
,
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel",
			"unique_tiles": ",iel",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": 0,
			"y_speed": 100,
			"zorder": "elevator_shafts"
		},
		{
			"tiles": ",
,
,
,
,
,
,,,,,,,,,isb,isb,isb,isb,isb,isb,isb
,,,,,,,,,,,,,isb
,,,,,,,,,,,,isb
,,,,,,,,,,,isb
,,,,,,,,,,isb
,,,,,,,,,isb
,
,
,
,
,
,
,
,
,
,
,
,
,
,",
			"unique_tiles": ",isb",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": 0,
			"y_speed": 100,
			"zorder": "interior_shelves_and_stairs"
		}
	],
	"title": "Nene's House",
	"touch_controls": true,
	"vars": {
	},
	"version": "1.4",
	"water_resistance": 100,
	"xscale": 100,
	"yscale": 100
}
{
	id: "inventory_screen_pane",
	prototype: ['player_controlled'],
	zorder: "@include data/zorder.cfg:overlaid_gui_dialog_underlay",
	use_absolute_screen_coordinates: true,
	is_strict: true,

	types: {
		InputValue: "enum {
							close,
							pane_left, pane_right,
							arrow_left, arrow_right, arrow_up, arrow_down,
							trigger_1
						}",
	
	},


	on_create: "initialize_parts",
	on_die: "[
		map(spawned_children, [
			remove_object(value),
			fire_event(value, 'die'),
		]),
	]",


	properties: {
#-------------------------- helper functions --------------------------#
		frogatto: "obj frogatto_playable <- level.player",

		wrapped: "def(string txt, int line_width) -> string
			switch(true,
				size(txt) <= line_width, 
					txt, 
				nl_index >= 0 and nl_index <= line_width+1, 
					txt[:nl_index+1] + wrapped(txt[nl_index+1:], line_width), 
				true, 
					txt[:break_index-1] + '\n' + wrapped(txt[break_index:], line_width) 
						where break_index = line_width - index(reverse(split(txt[:line_width], '')), ' ')
			) 
			where nl_index = index(split(txt, ''), '\n')",

#-------------------------- input handling --------------------------#

		handle_dispatched_input: "def(InputValue input) -> commands null",

#-------------------------- core behavior --------------------------#

		initialize_parts: "commands :: null",
		
	},

	events: {
		settings_menu: 'set(level.show_builtin_settings_dialog, false)',
	}
}

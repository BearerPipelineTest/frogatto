{
id: "triggerable",
prototype: ["transient_object"],
// we want to force any object that can be triggered to definitely provide the following:

properties: {
	event: { type: "string", default:"", editor_info: { type: "string" } },
	event_status:  "if(temporarily_lock_event_state != null, temporarily_lock_event_state, level.player.get_stored_event(event) )",


	trigger_on: "commands :: fire_event(me,'button_pressed')",
	trigger_off: "commands :: fire_event(me,'button_released')",
	
	/*
		This exists for the auto-camera-panning that occurs when you flip a switch.  There are some objects, like indicator lights and such, which ought to be omitted by the camera pan.  This is partly because they're just purely cosmetic, but this is especially since they're usually right next to the very switch you flipped, which to the player's eyes probably looks like the camera is pointed at the player itself.
	*/
	should_be_observed: "bool :: true", 


	/*
		We want gates and so on to delay becoming active until the camera focuses on them.  We set the following when the camera starts moving, and clear it when the camera reaches them.
	*/
	temporarily_lock_event_state: { type: "int|null", default: null },
	preferred_visual_focus_object_for_camera:  "custom_obj :: me",
},

}
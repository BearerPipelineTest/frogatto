{
id: "moth_bomber",
prototype: ["ant_flying"],
editor_info: {
	category: "enemies, cave",
},
timer_frequency: 50,
properties: {
	points_value: "23",
	
	title: "~Black Moth~",
	description: "~The black moth is an invasive species.~",
	taste: "~Tangy. Very... tangy. Make sure not to get the bomb by mistake.~",

#-------------------------- storage --------------------------#
	_bomb: { type: "obj moth_bomber_bomb|null", default: null },
	_next_behavior_trigger: { type: "int", default: 0 },
	
#-------------------------- timings/settings --------------------------#
	//these get customized to make different variants
	duration_without_bomb:	"int :: 100",
	duration_with_bomb:		"int :: 50",
	skip_easy_direct_overhead_attacks: "bool :: false",

#-------------------------- behavior --------------------------#
	attach_bomb:	"[
						add_object(bomb_obj),
						set(_bomb, bomb_obj),
					] where bomb_obj = object('moth_bomber_bomb', mid_x, mid_y + 20, {
						facing: -1,
						animation: 'normal2',
						parent: me,
						collides_with_level: false,
					})
					",

	drop_the_bomb: "def(obj moth_bomber_bomb the_bomb) -> commands [
						set(_bomb, null),
						set(the_bomb.velocity_x, velocity_x),
						set(the_bomb.animation, 'thrown'),

						set(the_bomb.parent, null),
						set(the_bomb.collides_with_level, true),

						set(_next_behavior_trigger, cycle + duration_without_bomb)
					]",
					
	pre_thrown_behavior_trigger: "if(_bomb, drop_the_bomb(_bomb))",
},

on_timer: "[proto_event('ant_flying', 'timer'),

					//if we don't have a bomb loaded, prepare one 
				if(animation = 'fly' and (not _bomb) and cycle > _next_behavior_trigger,
					[
						attach_bomb,
						set(_next_behavior_trigger, cycle + duration_with_bomb)
					]
				),
				
					/*
						If a bomb is loaded and we're right over the player, don't drop it
						this is meant to make the black version of the moth less threatening
					*/
				if(_bomb and cycle > _next_behavior_trigger and
					mid_x > level.player.mid_x - 200 and
					mid_x < level.player.mid_x + 200 and
					is_facing_towards_player,
					
					if(skip_easy_direct_overhead_attacks,
						set(_next_behavior_trigger, cycle + 25),
						drop_the_bomb(_bomb)
					)
				),
				
					//do it!
				if(_bomb and cycle > _next_behavior_trigger,
					drop_the_bomb(_bomb)
				)
			]",
on_process: "[
				proto_event('ant_flying', 'process'),
			]",
		
on_spat: "[
			set(_bomb, null),
			remove_object(_bomb),
			proto_event('ant_flying', 'spat')
		]",

		
animation: [
	{
		"@base": true,
		pad: 3,
		accel_x: 0,
		accel_y: 0,
		body_area: "all",
		attack_area: [4,18,24,28],
		image: "enemies/moth-black.png",
	},
	{
		accel_x: 10,
		id: "fly",
		rect: [208,1,246,39],
		frames: 10,
		frames_per_row: 2,
		duration: 4,
		events: "20:wingflap",
		solid_area: [10,14,23,29],
	},
	{
		id: "turn",
		rect: [3,158,27,185],
		frames: 3,
		duration: 4,
	},
	{
		accel_y: 20,
		id: "hurt",
		rect: [59,189,83,216],
		frames: 1,
		duration: 18,
	},
],
}

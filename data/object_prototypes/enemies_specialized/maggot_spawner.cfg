{
id: "maggot_spawner",
ignore_collide: true,
is_strict: true,
prototype: ["standard_values"],
hidden_in_game: true,
zorder: "@include data/zorder.cfg:in_front_of_everything",
timer_frequency: 5,

editor_info: {
	category: "enemies, cave",
},


properties: {
#-------------------------- configuration --------------------------#
	spawn_creature_type: "string :: 'maggot_white'",

#-------------------------- zone management --------------------------#
		/*
			These exist so that if someone "goofs" the bounding box in the editor and makes x2 smaller than x1, then the whole logic for the object still works sensibly instead of bombing out.
		*/
	_real_x_bound: "min(_x_bound, _x2_bound)",
	_real_x2_bound: "max(_x_bound, _x2_bound)",
	_real_y_bound: "min(_y_bound, _y2_bound)",
	_real_y2_bound: "max(_y_bound, _y2_bound)",


	zone_width: "abs(_x2_bound - _x_bound)",
	zone_height: "abs(_y2_bound - _y_bound)",
	
#-------------------------- spawn controls --------------------------#
	max_count: "decimal(zone_width/if(higher_difficulty,44.0,66.0))",
	number_nearby: "size(
		filter(
			filter(level.chars, value.type = spawn_creature_type),
			value.mid_x < _real_x2_bound + zone_width and
			value.mid_x > _real_x_bound - zone_width and
			value.mid_y < _real_y2_bound + zone_height*3 and
			value.mid_y > _real_y_bound - zone_height
		)
	)",
	
	spawn_frequency: "zone_width/if(higher_difficulty,9.0,3.0)",




#-------------------------- surface-detection logic --------------------------#
	find_surface: "def(int u, int v) -> [int,int]|null
		if(solid(level,u-1,v,2,2), _find_ceiling_open(u,v), _find_ceiling_solid(u,v))
	",

	_find_ceiling_open: "def(int u, int v) -> [int,int]|null
		//find and return the first open area, going down
		find_first_open_point_on_line(level, me, u, v, u, _real_y2_bound, 2)
	",  
	
	_find_ceiling_solid: "def(int u, int v) -> [int,int]|null
		//find and return the first solid area, going up
		find_first_solid_point_on_line(level, me, u, v, u, _real_y_bound, 2)
	",  
	

	
	act_B: "max(zone_width, zone_height)*2",

#-------------------------- vars --------------------------#
	_spawn_countup: { type: "int", default: 0, persistent: false },
	
	_x_bound: { type: "int", editor_info: { type: "x", value: "x-100" } },
	_x2_bound: { type: "int", editor_info: { type: "x", value: "x+150" } },
	_y_bound: { type: "int", editor_info: { type: "y", value: "y-100" } },
	_y2_bound: { type: "int", editor_info: { type: "y", value: "y+150" } },
},


on_create: "set(activation_border, act_B)",
on_timer: "[
	add(_spawn_countup, 5),
	if(_spawn_countup >= spawn_frequency and number_nearby < max_count,
		if(ceiling != null,
			/*
				If the point we've picked doesn't actually have open ceiling/floor in it, then don't try to spawn the maggot - it'd be stuck in solid terrain.  In general, we'd rather these get hand-placed so this doesn't happen.  Some sort of static-analysis to complain about this might be nice, but that's a job for later.  In the meantime, if this happens, it'll essentially lower the spawn rate of these.
			*/
			[
				set(_spawn_countup, 0),
				spawn(spawn_creature_type, ceiling[0], ceiling[1], facing,set(child.activation_border, act_B))
			]
		)
	)
] where ceiling = find_surface(_real_x_bound + 1d(zone_width), _real_y_bound + 1d(zone_height))",


}